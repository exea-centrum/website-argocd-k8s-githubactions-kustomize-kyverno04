# UWAGA: Ten Job musi być uruchamiany RĘCZNIE lub przez zaawansowany wzorzec w ArgoCD
# (np. ApplicationSet z generatorami). Tutaj generujemy go jako zwykły Job do celów
# demonstracyjnych, który może być synchronizowany i uruchamiany przez ArgoCD.
#
# Wymaga sekretu 'regcred' (Docker Registry Credentials) w tej samej przestrzeni nazw!

apiVersion: batch/v1
kind: Job
metadata:
  name: kaniko-image-build
  labels: { app: davtrogr-website-build }
spec:
  template:
    spec:
      # Kaniko wymaga uprawnień roota (securityContext)
      serviceAccountName: default 
      restartPolicy: OnFailure
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:latest
        args:
        - "--context=git://github.com/exea-centrum/website-argocd-k8s-githubactions-kustomize-kyverno04.git#latest" # Używa brancha 'latest' lub 'HEAD'
        - "--destination=ghcr.io/exea-centrum/website-argocd-k8s-githubactions-kustomize-kyverno04:latest"
        - "--dockerfile=Dockerfile"
        # Argumenty Kaniko dla uwierzytelnienia (używamy kubelet's credentials)
        - "--cache=true"
        - "--single-snapshot"
        env:
        # Ten sekret musi istnieć! Użyje go Kaniko do pushowania.
        - name: DOCKER_CONFIG
          value: /kaniko/.docker
        volumeMounts:
        - name: docker-config
          mountPath: /kaniko/.docker
      volumes:
      - name: docker-config
        projected:
          sources:
          - secret:
              name: regcred # Standardowa nazwa sekreta dla pobierania obrazów, musi zawierać dane logowania do GHCR!
              items:
                - key: .dockerconfigjson
                  path: config.json

  # Ogranicznik, aby Job nie działał wiecznie
  backoffLimit: 3
